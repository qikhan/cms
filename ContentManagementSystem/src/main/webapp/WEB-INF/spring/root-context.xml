<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.0.xsd
        http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx
	    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
>

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- Spring security configuration -->
	<!-- This allows configuration based user profile creation -->
	<!-- 
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="qk" password="qk" authorities="ROLE_USER, ROLE_ADMIN" />
				<security:user name="sm" password="sm" authorities="ROLE_USER" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
	<security:http auto-config='true'>
		<security:intercept-url pattern="/**" access="ROLE_USER" />
		-->
		<!-- this allows specific url to be https secured -->
		<!-- 
		<intercept-url pattern="/secure/**" access="ROLE_USER" requires-channel="https"/>
	</security:http>
 	-->

</beans:beans>
